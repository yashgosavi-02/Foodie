EP-1 : Inception
-----------------


# CDN - Content Delivery Network

# CORS - Cross Origin Resource Sharing


<script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>

- React.CreateElement(type, prop, children);
const h1 = React.createElement('h1', {id:'heading'}, "Hello React");
- ReactDOM.createRoot(container, options);
const root = ReactDOM.createRoot(document.getElementById('root'));
- root.render(reactNode);
root.render(h1);


- Why react ? 
- Enables manipulating dom (costly opertion of browser) using Javascript

- what is attribute?
. Attributes help define the properties or behavior of the element and are specified in the opening tag of the element

- React Element : Js Object and Not a tag 

- root.render(reactElm);
root.render takes a reactElm, converts it to a tag and put it into the DOM

- Why JSX?
Creating react element was a heavy job and involved a lot of code, so we use 'JSX', making creating elements easier

--------------------------------------------------------------------------------------

EP-2 : Igniting our app
------------------------

# Adding local to github
- git init
- git branch -M main
- git add . 
- git commit -m "added _ file"
- git remote add origin [url]
- git push origin main

# what it takes to create CRA?

NPM - It is a package manager for Javascript programming language

- npm init
- package name : [name of the app]
- version : [version of the app]
- description : [what the app is about]
- entry point : [app.js / index.js / index.html]
- test command : [jest]
- git repository : [url]
- keyword : [keywords about the app]
- author : [name of the author]
- license : [license for the app]

- 'package.json' is created after initializing the npm which contains all the information about the application and what dependencies it need to work well.
- It is configuration for NPM

# Dependeny - A dependency is when a software component requires another component to work properly.
- Dev Dependency : required for development phase
- Normal Dependency : required to used in production

# Bundler - A tool that processes an application's source files into static assets for browsers. Bundlers help organize dependencies and modules, reduce file sizes, and improve website performance. [e.g : webpack, parcel, vite]

# package-lock.json : package-lock.json is a file automatically generated by npm. It is used to lock the dependency versions of packages in a project to ensure consistent installations across different environments.

# ^ (carat) :  Allows updates to patch and minor versions but not major versions
For ^1.2.3, any version >=1.2.3 and <2.0.0 will be allowed
# ~ (tilde) : Allows updates to patch versions but locks the minor and major versions.
For ~1.2.3, only versions >=1.2.3 and <1.3.0 are allowed

# node_modules : It stores all the external libraries and packages (dependencies) that your project relies on to function correctly
- transitive dependencies 

# parcel : zero config build tool for web app
# babel : Js compiler

# .gitignore : contains all the files which we want git to ignore [Never put package.json and package-lock.json]